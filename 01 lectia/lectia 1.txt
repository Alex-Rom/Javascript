
Intro

JavaScript a fost dezvoltata de Netscape in anii '90.
JavaScript este un limbaj care in mod principal ruleaza pe computerul userului (client-side).
Ruleaza in browser.
Browserul contine Javascript engine care citeste, interpreteaza si ruleaza comenzile.
Javascript engine contine si intreaga librarie necesara rularii comenzilor, inclusiv Web-API despre care o sa invatam.

Se spune ca este un limbaj care este interpretat (executat pe loc) (scripting language), nu compilat, dar un raspuns mai bun gasiti aici:
https://stackoverflow.com/questions/9623813/is-javascript-compiled-or-an-interpreted-language
https://softwareengineering.stackexchange.com/questions/138521/is-javascript-interpreted-by-design

Diferenta dintre interpretare si compilare: https://kb.iu.edu/d/agsz

Node.js este o platforma (environment) care ruleaza pe server, folosind JavaScript Engine V8 de la Chrome.

JavaScript’s syntax is heavily inspired by C++ and Java. 
If you have experience in C++ or Java, JavaScript’s syntax will seem familiar to you. 
However, the inner workings of JavaScript is closer to a dynamically-typed, interpreted language such as Python or Ruby.

Dynamic typing 
JavaScript este un limbaj dynamically-typed
JavaScript engine asigneaza variabilelor un tip (numeric, string, boolean, referinta catre obiect, etc) in momentul executiei
in functie de valoarea pe care o are variabila la acel moment.
Dynamically-typed languages are those (like JavaScript) 
where the interpreter assigns variables a type at runtime based on the variable's value at the time.

Fiind dezvoltat de Netscape (Mozilla), pagina cu documentatia oficiala se gaseste aici:
https://developer.mozilla.org/en-US/docs/Web/JavaScript

Web API = libraria de functii/obiecte pentru paginile web: pagina oficiala:
https://developer.mozilla.org/en-US/docs/Web/API

ECMAScript = denumirea oficiala a JavaScript

Alte introducere:
https://web.stanford.edu/class/cs98si/slides/overview.html

Definitia variabiliei:
O zona de memorie care incapsuleaza date care pot varia in timp.
Variabila are 4 proprietati:
- identificator (denumire)
- adresa de memtorie fixa
- valoare
- The scope: adica contextul in care se afla si de unde este vizibila, si cat "traieste":
  Daca e o variabila locala (intr-o functie) sau globala (atribut al unui obiect) 


Variabilele in JS se impart in 2 categorii:
- obiecte
- primitive: undefined, null, string, numeric, boolean, symbol.

Variabilele numerice sunt double precision floating-point (double = de doua ori 32 de biti, adica 64 de biti (8 bytes))

Diferenta dintre precizie si acuratete
======================================
In orice limbaj de programare 34 x 0.1 = 3.4000000000000004, si nu 3.4
Aceasta lipsa de "precizie" de fapt, nu este lipsa de precizie, ci lipsa de acuratete. Din contra, precizia e 100% - va da mereu acelasi rezultate.
FAceti o analogie cu tragerea cu arcul la tinta. 
Acuratetea = cat de departe sau aproape a tintit fata de centru.
Precizia = Daca a tintit mereu in acelasi punct, indiferent daca e bine sau nu.
Din cauze legate de modul de functionare a procesoarelor, in efectuarea operatiilor matematice cu numere zecimale se prefera precizia (sa dea mereu acelasi rezultat)
in dauna acuratetii.



